"""empty message

Revision ID: be5b49f17091
Revises: null
Create Date: 2023-03-20 22:10:07.777504

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = 'be5b49f17091'
down_revision = 'dfea2ae0354d'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('apscheduler_jobs', schema=None) as batch_op:
        batch_op.drop_index('ix_apscheduler_jobs_next_run_time')

    op.drop_table('apscheduler_jobs')
    with op.batch_alter_table('booking_data', schema=None) as batch_op:
        batch_op.add_column(sa.Column('occupant', sa.Boolean(), nullable=True))
        batch_op.add_column(sa.Column('occupant_first_name', sa.String(length=50), nullable=True))
        batch_op.add_column(sa.Column('occupant_last_name', sa.String(length=50), nullable=True))
        batch_op.add_column(sa.Column('occupant_address', sa.String(length=50), nullable=True))
        batch_op.add_column(sa.Column('occupant_phone_num', sa.String(length=50), nullable=True))
        batch_op.alter_column('arrival_date',
               existing_type=sa.DATE(),
               type_=sa.DateTime(),
               existing_nullable=True)
       

    with op.batch_alter_table('booking_time_test', schema=None) as batch_op:
        batch_op.alter_column('time_delta',
               existing_type=sa.VARCHAR(length=50),
               type_=sa.String(length=50),
               existing_nullable=True)
        batch_op.alter_column('date_delta',
               existing_type=sa.VARCHAR(length=50),
               type_=sa.String(length=50),
               existing_nullable=True)
        batch_op.alter_column('failed_at',
               existing_type=sa.VARCHAR(length=75),
               type_=sa.String(length=75),
               existing_nullable=True)

    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.alter_column('password',
               existing_type=sa.VARCHAR(length=100),
               type_=sa.String(length=100),
               existing_nullable=True)

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.alter_column('password',
               existing_type=sa.String(length=20),
               type_=sa.VARCHAR(length=100),
               existing_nullable=True)

    with op.batch_alter_table('booking_time_test', schema=None) as batch_op:
        batch_op.alter_column('failed_at',
               existing_type=sa.String(length=20),
               type_=sa.VARCHAR(length=75),
               existing_nullable=True)
        batch_op.alter_column('date_delta',
               existing_type=sa.String(length=20),
               type_=sa.VARCHAR(length=50),
               existing_nullable=True)
        batch_op.alter_column('time_delta',
               existing_type=sa.String(length=20),
               type_=sa.VARCHAR(length=50),
               existing_nullable=True)

    with op.batch_alter_table('booking_data', schema=None) as batch_op:

        batch_op.alter_column('arrival_date',
               existing_type=sa.DateTime(),
               type_=sa.DATE(),
               existing_nullable=True)
        batch_op.drop_column('occupant_phone_num')
        batch_op.drop_column('occupant_address')
        batch_op.drop_column('occupant_last_name')
        batch_op.drop_column('occupant_first_name')
        batch_op.drop_column('occupant')

    op.create_table('apscheduler_jobs',
    sa.Column('id', sa.VARCHAR(length=191), autoincrement=False, nullable=False),
    sa.Column('next_run_time', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('job_state', postgresql.BYTEA(), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name='apscheduler_jobs_pkey')
    )
    with op.batch_alter_table('apscheduler_jobs', schema=None) as batch_op:
        batch_op.create_index('ix_apscheduler_jobs_next_run_time', ['next_run_time'], unique=False)

    # ### end Alembic commands ###
